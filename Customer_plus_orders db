#In order to quantify statistics about customer and order data, I'm using SQL to query a database that has numerous tables. 

#1. In January, how many orders were placed?
SELECT COUNT(distinct orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'; 

#2. What percentage of orders were for iPhones?
SELECT COUNT(distinct orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid)=6
AND orderid <> 'Order ID';

#3. For every order placed in February, choose the client account numbers. 
SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid)=6
AND orderid <> 'Order ID';

#4. What was the price of the cheapest product that was sold in January?
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1; 

#5. How much money was made overall in January from each product sold?
SELECT sum(quantity)*price as revenue
,product
 FROM BIT_DB.JanSales
GROUP BY product;

SELECT orderid, quantity, price, product
FROM BIT_DB.JanSales; 

SELECT SUM(quantity), price, product
FROM BIT_DB.JanSales
GROUP BY product, price;

SELECT SUM(quantity)*price as Revenue
,product
FROM BIT_DB.JanSales
GROUP BY product; 

#6. What products did 548 Lincoln St., Seattle, WA 98101 sell in February? How many of each did they sell? What was the total revenue?
SELECT sum(quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. What percentage of customers placed orders for more than two items at once, and how much did those customers typically spend?
SELECT
count(distinct cust.acctnum)
, avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid)=6
AND orderid<>'Order ID';



# Now we apply advanced data filtering to get more accurate results from specific queries
# Find orders places in between feb 13, 2019 and feb 18, 2019
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'
;

# Query the location of the order that was placed on the following date and time
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'
;

# Quantify the sum of sales on the ENTIRE day of Feb 18, 2019
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'
;

SELECT orderdate from BIT_DB.FebSales;

# Find batteries in February
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'
;

# List product and price of Feb Sales where price ends with 99 cents
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99'
;

# List product and total units in Los Angeles, list by products
SELECT product,SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP By Product
;
